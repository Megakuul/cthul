nodeid = "node001.wave.cthul.io"

[lifecycle]
termination_ttl = 4 # ttl of the graceful termination process (seconds)

[logging]
level = "debug" # 'debug', 'info', 'warning', 'error', 'critical'
trace = false # enable log traces (outputs file & line number)
buffer = 256 # runtime log buffer size (items NOT bytes)

[db]
addr = "unixs:///var/run/cthul/etcd/etcd.sock" # address of the local etcd node (unix|tcp)
username = "wave" # db username
password = "Supersecret" # db password
timeout_ttl = 2 # ttl of db dial (seconds)
healthcheck = true # perform initial db endpoint healthcheck before launching service.
skipverify = true # disables verification of the public database cert.

[election]
contest = true # allow this node to contest the leader
cash = 10 # cash balance of this node
contest_ttl = 2 # ttl for every interval cycle (essentially keepalive interval) (seconds)

[scheduler]
register = true # add this node to the scheduler, allowing it to move domains to this node
register_ttl = 2 # ttl for every registration cycle (essentially keepalive interval) (seconds)
cpu_threshold = 95 # host cpu resources that are taken into consideration for the schedule decisions (percentage)
mem_threshold = 95 # host memory resources that are taken into consideration for schedule decisions (percentage)
# thresholds can also be set higher then 100, however this should be done with caution, as the scheduler
# will then move domains even if the host memory and cpu resources are exhausted.

cycle_ttl = 2 # ttl for every scheduler cycle (essentially keepalive interval) (seconds)
domain_reschedule_threshold = 2 # cycles that must evaluate a domain reschedule in a row before rescheduling

[api]
addr = "0.0.0.0:1870" # address the api listener is bound to (tcp)
cert_file = "/etc/wave/cert/cert.pem" # file with public certificate chain (pem)
key_file = "/etc/wave/cert/key.pem" # file with private key (pem)
idle_ttl = 600 # ttl of idle connections (seconds)